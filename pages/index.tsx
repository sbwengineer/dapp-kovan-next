import React, { useEffect, useState } from 'react';
import { ethers } from "ethers";
import type { NextPage } from 'next'
import Head from 'next/head';
import Navbar from '../components/Home/Navbar'
import styles from '../styles/Home.module.scss'
import Footer from './../components/Home/Footer';


const Home: NextPage = () => {

  const [depositValue, setDepositValue] = useState(0);
  const [balance, setBalance] = useState();
  const [provider, setProvider] = useState();
  const [signer, setSigner] = useState();


  const requestAccount = async () => {
    if (window.ethereum) {
      try {
        const account = await window.ethereum.request({
          method: "eth_requestAccounts",
        })
      } catch (error) {
        console.log(error);
      }

    }
  }

  const connectWallet = async () => {
    if (typeof window !== "undefined") {
      await requestAccount();
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();

      setProvider(provider);
      setSigner(signer);
    }
  }

  const contractAddress = "0x5af181D22c7Bb30Fe95581F57802fE569A731f61"; //contract address
  const ABI = [
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ]
  const contract = new ethers.Contract(contractAddress, ABI, signer);

  useEffect(() => {

    // get balance of the contract
    const getBalance = async () => {
      const balance = await provider.getBalance(contractAddress);
      setBalance(ethers.utils.formatEther(balance));
    }
    getBalance()
      .catch(console.error)
  }, [provider, contract])

  //handle Deposit Change
  const handleDepositChange = (event) => {
    setDepositValue(event.target.value)
  }

  //handle Deposit Submit
  const handleDepositSubmit = async (e) => {
    e.preventDefault()
    const ethValue = ethers.utils.parseEther(depositValue)
    const deposit = await contract.deposit({ value: ethValue });
    await deposit.wait();
    const balance = await provider.getBalance(contractAddress);
    setBalance(ethers.utils.formatEther(balance));
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Krypto Square </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />
      <div className={styles.banner}>
        <div>
          <h2>Send Crypto <br /> across the world</h2>
          <p>Explore the crypto world. Buy and sell cryptocurrencies easily on Krypto.</p>
          <button onClick={connectWallet}>Connect Wallet</button>
        </div>
        <div>
          <div className={styles.account}>
            <h3>Contract Balance:</h3>
            <p>{balance} ETH </p>
          </div>
        </div>
      </div>
      <div className={styles.form}>
        <div style={{width: "50%"}}>
          <h2>Deposit Contract Balance</h2>
          <form onSubmit={handleDepositSubmit}>
          <input type="number" placeholder="Enter amount" onChange={handleDepositChange} value={depositValue} />
            <button type="submit" className={styles.button}>Deposit</button>
          </form>
        </div>
      </div>
      <Footer />
    </div>
  )
}

export default Home
